{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AlertService {\n  constructor() {\n    this.alertsSubject = new BehaviorSubject([]);\n    this.confirmDialogSubject = new BehaviorSubject(null);\n    this.alerts$ = this.alertsSubject.asObservable();\n    this.confirmDialog$ = this.confirmDialogSubject.asObservable();\n  }\n  // Success alert\n  success(title, message, duration = 5000) {\n    return this.addAlert({\n      id: this.generateId(),\n      type: 'success',\n      title,\n      message,\n      duration,\n      showCloseButton: true\n    });\n  }\n  // Error alert\n  error(title, message, duration = 0) {\n    return this.addAlert({\n      id: this.generateId(),\n      type: 'error',\n      title,\n      message,\n      duration,\n      showCloseButton: true\n    });\n  }\n  // Warning alert\n  warning(title, message, duration = 5000) {\n    return this.addAlert({\n      id: this.generateId(),\n      type: 'warning',\n      title,\n      message,\n      duration,\n      showCloseButton: true\n    });\n  }\n  // Info alert\n  info(title, message, duration = 5000) {\n    return this.addAlert({\n      id: this.generateId(),\n      type: 'info',\n      title,\n      message,\n      duration,\n      showCloseButton: true\n    });\n  }\n  // Add custom alert\n  addAlert(alert) {\n    const alerts = [...this.alertsSubject.value, alert];\n    this.alertsSubject.next(alerts);\n    // Auto-close if duration is set\n    if (alert.duration && alert.duration > 0) {\n      setTimeout(() => {\n        this.removeAlert(alert.id);\n      }, alert.duration);\n    }\n    return alert.id;\n  }\n  // Remove alert\n  removeAlert(id) {\n    const alerts = this.alertsSubject.value.filter(alert => alert.id !== id);\n    this.alertsSubject.next(alerts);\n  }\n  // Clear all alerts\n  clearAll() {\n    this.alertsSubject.next([]);\n  }\n  // Show confirmation dialog\n  confirm(title, message, onConfirm, options) {\n    const dialog = {\n      id: this.generateId(),\n      title,\n      message,\n      confirmText: options?.confirmText || 'Підтвердити',\n      cancelText: options?.cancelText || 'Скасувати',\n      type: options?.type || 'warning',\n      onConfirm,\n      onCancel: options?.onCancel\n    };\n    this.confirmDialogSubject.next(dialog);\n  }\n  // Close confirmation dialog\n  closeConfirmDialog() {\n    this.confirmDialogSubject.next(null);\n  }\n  // Execute confirmation\n  executeConfirm() {\n    const dialog = this.confirmDialogSubject.value;\n    if (dialog) {\n      dialog.onConfirm();\n      this.closeConfirmDialog();\n    }\n  }\n  // Execute cancel\n  executeCancel() {\n    const dialog = this.confirmDialogSubject.value;\n    if (dialog && dialog.onCancel) {\n      dialog.onCancel();\n    }\n    this.closeConfirmDialog();\n  }\n  generateId() {\n    return Math.random().toString(36).substr(2, 9);\n  }\n  static {\n    this.ɵfac = function AlertService_Factory(t) {\n      return new (t || AlertService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AlertService,\n      factory: AlertService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","AlertService","constructor","alertsSubject","confirmDialogSubject","alerts$","asObservable","confirmDialog$","success","title","message","duration","addAlert","id","generateId","type","showCloseButton","error","warning","info","alert","alerts","value","next","setTimeout","removeAlert","filter","clearAll","confirm","onConfirm","options","dialog","confirmText","cancelText","onCancel","closeConfirmDialog","executeConfirm","executeCancel","Math","random","toString","substr","factory","ɵfac","providedIn"],"sources":["/Users/maksnalyvaiko/personal/rus/src/app/services/alert.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface Alert {\n  id: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  title: string;\n  message: string;\n  duration?: number; // Auto-close duration in ms, 0 = no auto-close\n  showCloseButton?: boolean;\n  actions?: AlertAction[];\n}\n\nexport interface AlertAction {\n  text: string;\n  action: () => void;\n  style?: 'primary' | 'secondary' | 'danger';\n}\n\nexport interface ConfirmDialog {\n  id: string;\n  title: string;\n  message: string;\n  confirmText?: string;\n  cancelText?: string;\n  type?: 'warning' | 'danger' | 'info';\n  onConfirm: () => void;\n  onCancel?: () => void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private alertsSubject = new BehaviorSubject<Alert[]>([]);\n  private confirmDialogSubject = new BehaviorSubject<ConfirmDialog | null>(null);\n  \n  public alerts$ = this.alertsSubject.asObservable();\n  public confirmDialog$ = this.confirmDialogSubject.asObservable();\n\n  constructor() {}\n\n  // Success alert\n  success(title: string, message: string, duration: number = 5000): string {\n    return this.addAlert({\n      id: this.generateId(),\n      type: 'success',\n      title,\n      message,\n      duration,\n      showCloseButton: true\n    });\n  }\n\n  // Error alert\n  error(title: string, message: string, duration: number = 0): string {\n    return this.addAlert({\n      id: this.generateId(),\n      type: 'error',\n      title,\n      message,\n      duration,\n      showCloseButton: true\n    });\n  }\n\n  // Warning alert\n  warning(title: string, message: string, duration: number = 5000): string {\n    return this.addAlert({\n      id: this.generateId(),\n      type: 'warning',\n      title,\n      message,\n      duration,\n      showCloseButton: true\n    });\n  }\n\n  // Info alert\n  info(title: string, message: string, duration: number = 5000): string {\n    return this.addAlert({\n      id: this.generateId(),\n      type: 'info',\n      title,\n      message,\n      duration,\n      showCloseButton: true\n    });\n  }\n\n  // Add custom alert\n  addAlert(alert: Alert): string {\n    const alerts = [...this.alertsSubject.value, alert];\n    this.alertsSubject.next(alerts);\n\n    // Auto-close if duration is set\n    if (alert.duration && alert.duration > 0) {\n      setTimeout(() => {\n        this.removeAlert(alert.id);\n      }, alert.duration);\n    }\n\n    return alert.id;\n  }\n\n  // Remove alert\n  removeAlert(id: string): void {\n    const alerts = this.alertsSubject.value.filter(alert => alert.id !== id);\n    this.alertsSubject.next(alerts);\n  }\n\n  // Clear all alerts\n  clearAll(): void {\n    this.alertsSubject.next([]);\n  }\n\n  // Show confirmation dialog\n  confirm(\n    title: string, \n    message: string, \n    onConfirm: () => void, \n    options?: {\n      confirmText?: string;\n      cancelText?: string;\n      type?: 'warning' | 'danger' | 'info';\n      onCancel?: () => void;\n    }\n  ): void {\n    const dialog: ConfirmDialog = {\n      id: this.generateId(),\n      title,\n      message,\n      confirmText: options?.confirmText || 'Підтвердити',\n      cancelText: options?.cancelText || 'Скасувати',\n      type: options?.type || 'warning',\n      onConfirm,\n      onCancel: options?.onCancel\n    };\n\n    this.confirmDialogSubject.next(dialog);\n  }\n\n  // Close confirmation dialog\n  closeConfirmDialog(): void {\n    this.confirmDialogSubject.next(null);\n  }\n\n  // Execute confirmation\n  executeConfirm(): void {\n    const dialog = this.confirmDialogSubject.value;\n    if (dialog) {\n      dialog.onConfirm();\n      this.closeConfirmDialog();\n    }\n  }\n\n  // Execute cancel\n  executeCancel(): void {\n    const dialog = this.confirmDialogSubject.value;\n    if (dialog && dialog.onCancel) {\n      dialog.onCancel();\n    }\n    this.closeConfirmDialog();\n  }\n\n  private generateId(): string {\n    return Math.random().toString(36).substr(2, 9);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}